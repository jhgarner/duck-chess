:root {
  --og-active: oklch(86.9% 0.20 105.35);
  /*--active: 92.9% 0.123 105.35;*/
  --og-target: oklch(76.9% 0.20 143.35);
  /*--target: 72.9% 0.223 143.35;*/
  --danger: oklch(56.44% 0.22 28.11);
  /*--danger: 56.44% 0.22 28.11;*/
}

html {
  container-type: inline-size;
  background-color: #fff4ea;
}

body {
  height: 100vh;
  width: 100cqw;
  margin: 0;
}

#main {
  width: 100%;
  height: 100%;
}

.headed {
  display: grid;
  grid-template-rows: min-content auto;
  justify-items: center;
  height: 100%;
  overflow: hidden;
}

.padding {
  display: grid;
  grid-template-rows: min-content auto min-content;
  grid-template-columns: min-content auto min-content;
  justify-items: center;
  height: 100%;
  overflow: hidden;
}

.login {
  /* I'd like to have this cool login form with a drop shadow, but I can't figure out how css works */
  /* box-shadow: rgba(0, 0, 0, 0.25) 0px 54px 55px, rgba(0, 0, 0, 0.12) 0px -12px 30px, rgba(0, 0, 0, 0.12) 0px 4px 6px, rgba(0, 0, 0, 0.17) 0px 12px 13px, rgba(0, 0, 0, 0.09) 0px -3px 5px; */
  display: flex;
  row-gap: 20px;
  flex-direction: column;
  justify-content: center;
  align-items: center;
  text-align: center;
  min-height: 100vh;
}

.empty {
  height: 20px;
}

.header {
  height: 64px;
  font-size: 16px;
  font-family: system-ui;
  text-align: center;
  display: flex;
  column-gap: 20px;
}

.mainMenu {
  padding: 16px;
  display: flex;
  flex-direction: column;
  align-items: center;
}

.newGame {
  row-gap: 10px;
  display: flex;
  flex-direction: column;
  align-items: center;
}

hr {
    border: none;
    width: 200px;
    border-top: 3px double #333;
    color: #333;
    overflow: visible;
    text-align: center;
    height: 5px;
}

.buttonMenu {
  display: flex;
  flex-direction: column;
  align-items: center;
}

h1 {
  font-family: system-ui;
  text-align: center;
}

h2 {
  font-family: system-ui;
  text-align: center;
}

.boardHolder {
  display: grid;
  height: 100%;
  max-width: 100%;
  grid-template-rows: auto;
  overflow: hidden;
  justify-items: center;
  padding: 8px;
}

.turnHeader {
  padding: 8px;
}

.turnHeaderDiv {
  padding: 8px;
}

.board {
  max-height: 100%;
  max-width: 100%;
  overflow: hidden;
  display: grid;
  margin: 0 auto;
  justify-content: center;
  --clip: rect(0%, 100%, 0%, 100%);
}

.overlapper {
  display: grid;
}

.overlapper > * {
  grid-row: 1;
  grid-column: 1;
  width: 100%;
  height: 100%;
  overflow: hidden;
}

.overlapper img {
  pointer-events: none;
}

.cellEven {
  background-color: oklch(78.4% 0.113 60.885);
}

.cellOdd {
  background-color: oklch(70% 0.113 60.885);
}

.cellExtraOdd {
  background-color: oklch(63% 0.113 60.885);
}

.cellEven ~ * {
  --max-trans: 0.7;
  --bg: oklch(78.4% 0.113 60.885)
}
.cellOdd ~ * {
  --max-trans: 0.7;
  --bg: oklch(70% 0.113 60.885);
}

.cellExtraOdd ~ * {
  --max-trans: 0.7;
  --bg: oklch(63% 0.113 60.885);
}

.background {
  z-index: auto;
}

.background div {
  pointer-events: none;
}

.background ~ div {
  pointer-events: none;
}

.hexboard {
  max-height: round(down, 100%, 22px);
  max-width: round(down, 100%, 34px);
  margin: 0 auto;
  overflow: hidden;
  display: grid;
  justify-content: center;
  aspect-ratio: 34/22;
  --clip: polygon(75% 0, 100% 50%, 75% 100%, 25% 100%, 0 50%, 25% 0);
}

.background {
  clip-path: var(--clip);
}

.specular {
  z-index: 90;
  display: grid;
}

.specular.fluent {
  background: radial-gradient(circle at var(--x) var(--y), oklch(from var(--color) l c h / 0.7) 0%, oklch(from var(--color) l c h / 0) 100%);
}

.specular.flat {
  background-color: oklch(from var(--color) l c h / 0.7);
}

.specular img {
  max-width: 100%;
  max-height: 100%;
}

.border.fluent {
  background: radial-gradient(circle at var(--x) var(--y), var(--color), oklch(from var(--color) l c h / 0.3));
}

.border.flat {
  background-color: var(--color)
}

:has(> .desat) {
  --active: oklch(from var(--og-active) l 0.05 h);
  --target: oklch(from var(--og-target) l 0.05 h);
}

:has(> .sat) {
  --active: oklch(from var(--og-active) l c h);
  --target: oklch(from var(--og-target) l c h);
}

.danger {
  background-color: oklch(from var(--danger) l c h / 0.5);
}

.target {
  transform: translate(var(--x), var(--y));
  z-index: 200;
  filter: blur(1px);
  --clip: circle(var(--size));
  clip-path: var(--clip);
  justify-self: center;
  align-self: center;
  aspect-ratio: 1 / 1;
  max-width: 100%;
  max-height: 100%;
  width: auto;
  height: auto;
}


/* Loading CSS */
/* https://codepen.io/jackrugile/pen/JddmaX */

.loader-inner {
  height: 60px;
  margin: auto;
  position: absolute;
  width: 100px;
}

.loader-line-wrap {
  animation: 
  spin 2000ms cubic-bezier(.175, .885, .32, 1.275) infinite
  ;
  box-sizing: border-box;
  height: 50px;
  left: 0;
  overflow: hidden;
  position: absolute;
  top: 0;
  transform-origin: 50% 100%;
  width: 100px;
}
.loader-line {
  border: 4px solid transparent;
  border-radius: 100%;
  box-sizing: border-box;
  height: 100px;
  left: 0;
  margin: 0 auto;
  position: absolute;
  right: 0;
  top: 0;
  width: 100px;
}
.loader-line-wrap:nth-child(1) { animation-delay: -50ms; }
.loader-line-wrap:nth-child(2) { animation-delay: -100ms; }
.loader-line-wrap:nth-child(3) { animation-delay: -150ms; }
.loader-line-wrap:nth-child(4) { animation-delay: -200ms; }
.loader-line-wrap:nth-child(5) { animation-delay: -250ms; }

.loader-line-wrap:nth-child(1) .loader-line {
  border-color: hsl(0, 80%, 60%);
  height: 90px;
  width: 90px;
  top: 7px;
}
.loader-line-wrap:nth-child(2) .loader-line {
  border-color: hsl(60, 80%, 60%);
  height: 76px;
  width: 76px;
  top: 14px;
}
.loader-line-wrap:nth-child(3) .loader-line {
  border-color: hsl(120, 80%, 60%);
  height: 62px;
  width: 62px;
  top: 21px;
}
.loader-line-wrap:nth-child(4) .loader-line {
  border-color: hsl(180, 80%, 60%);
  height: 48px;
  width: 48px;
  top: 28px;
}
.loader-line-wrap:nth-child(5) .loader-line {
  border-color: hsl(240, 80%, 60%);
  height: 34px;
  width: 34px;
  top: 35px;
}

@keyframes spin {
  0%, 15% {
    transform: rotate(0);
  }
  100% {
    transform: rotate(360deg);
  }
}
